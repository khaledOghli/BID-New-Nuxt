// ESLint config generated by Nuxt
/// <reference path="./eslint-typegen.d.ts" />

import { composer } from '../node_modules/.pnpm/eslint-flat-config-utils@0.2.5/node_modules/eslint-flat-config-utils/dist/index.mjs';
import typegen from '../node_modules/.pnpm/eslint-typegen@0.2.4_eslint@8.57.0/node_modules/eslint-typegen/dist/index.mjs';
import { createConfigForNuxt, defineFlatConfigs, resolveOptions } from '../node_modules/.pnpm/@nuxt+eslint-config@0.3.13_eslint@8.57.0_typescript@5.4.5/node_modules/@nuxt/eslint-config/dist/flat.mjs';

export { defineFlatConfigs };

export const configs = composer();

export const options = resolveOptions({
  features: {
    standalone: false,
  },
  dirs: {
    pages: [
      'pages',
      'UI/pages',
      'apps/landing/pages',
      'apps/dashboard/pages',
      'apps/auth/pages',
    ],
    composables: [
      'composables',
      'utils',
      'stores',
      'locales',
      'UI/composables',
      'UI/utils',
      'apps/landing/composables',
      'apps/landing/utils',
      'apps/dashboard/composables',
      'apps/dashboard/utils',
      'apps/auth/composables',
      'apps/auth/utils',
    ],
    components: [
      'components',
      'UI/components',
      'apps/landing/components',
      'apps/dashboard/components',
      'apps/auth/components',
    ],
    componentsPrefixed: [
      'UI/components',
    ],
    layouts: [
      'layouts',
      'UI/layouts',
      'apps/landing/layouts',
      'apps/dashboard/layouts',
      'apps/auth/layouts',
    ],
    plugins: [
      'plugins',
      'UI/plugins',
      'apps/landing/plugins',
      'apps/dashboard/plugins',
      'apps/auth/plugins',
    ],
    middleware: [
      'middleware',
      'UI/middleware',
      'apps/landing/middleware',
      'apps/dashboard/middleware',
      'apps/auth/middleware',
    ],
    modules: [
      'modules',
      'UI/modules',
      'apps/landing/modules',
      'apps/dashboard/modules',
      'apps/auth/modules',
    ],
    servers: [],
    root: [
      '/Users/khaledoghli/Work/BID-New-Nuxt',
    ],
    src: [
      '',
      'UI',
      'apps/landing',
      'apps/dashboard',
      'apps/auth',
    ],
  },
});

configs.append(
// Nuxt Configs
  createConfigForNuxt(options),

  // Set globals from imports registry
  { name: 'nuxt/import-globals', languageOptions: { globals: { isVue2: 'readonly', isVue3: 'readonly', defineNuxtLink: 'readonly', useNuxtApp: 'readonly', tryUseNuxtApp: 'readonly', defineNuxtPlugin: 'readonly', definePayloadPlugin: 'readonly', useRuntimeConfig: 'readonly', defineAppConfig: 'readonly', requestIdleCallback: 'readonly', cancelIdleCallback: 'readonly', setInterval: 'readonly', useAppConfig: 'readonly', updateAppConfig: 'readonly', defineNuxtComponent: 'readonly', useAsyncData: 'readonly', useLazyAsyncData: 'readonly', useNuxtData: 'readonly', refreshNuxtData: 'readonly', clearNuxtData: 'readonly', useHydration: 'readonly', callOnce: 'readonly', useState: 'readonly', clearNuxtState: 'readonly', clearError: 'readonly', createError: 'readonly', isNuxtError: 'readonly', showError: 'readonly', useError: 'readonly', useFetch: 'readonly', useLazyFetch: 'readonly', useCookie: 'readonly', refreshCookie: 'readonly', prerenderRoutes: 'readonly', useRequestHeader: 'readonly', useRequestHeaders: 'readonly', useRequestEvent: 'readonly', useRequestFetch: 'readonly', setResponseStatus: 'readonly', onNuxtReady: 'readonly', preloadComponents: 'readonly', prefetchComponents: 'readonly', preloadRouteComponents: 'readonly', abortNavigation: 'readonly', addRouteMiddleware: 'readonly', defineNuxtRouteMiddleware: 'readonly', setPageLayout: 'readonly', navigateTo: 'readonly', useRoute: 'readonly', useRouter: 'readonly', isPrerendered: 'readonly', loadPayload: 'readonly', preloadPayload: 'readonly', definePayloadReducer: 'readonly', definePayloadReviver: 'readonly', useLoadingIndicator: 'readonly', getAppManifest: 'readonly', getRouteRules: 'readonly', reloadNuxtApp: 'readonly', useRequestURL: 'readonly', usePreviewMode: 'readonly', useId: 'readonly', onBeforeRouteLeave: 'readonly', onBeforeRouteUpdate: 'readonly', withCtx: 'readonly', withDirectives: 'readonly', withKeys: 'readonly', withMemo: 'readonly', withModifiers: 'readonly', withScopeId: 'readonly', onActivated: 'readonly', onBeforeMount: 'readonly', onBeforeUnmount: 'readonly', onBeforeUpdate: 'readonly', onDeactivated: 'readonly', onErrorCaptured: 'readonly', onMounted: 'readonly', onRenderTracked: 'readonly', onRenderTriggered: 'readonly', onServerPrefetch: 'readonly', onUnmounted: 'readonly', onUpdated: 'readonly', computed: 'readonly', customRef: 'readonly', isProxy: 'readonly', isReactive: 'readonly', isReadonly: 'readonly', isRef: 'readonly', markRaw: 'readonly', proxyRefs: 'readonly', reactive: 'readonly', readonly: 'readonly', ref: 'readonly', shallowReactive: 'readonly', shallowReadonly: 'readonly', shallowRef: 'readonly', toRaw: 'readonly', toRef: 'readonly', toRefs: 'readonly', triggerRef: 'readonly', unref: 'readonly', watch: 'readonly', watchEffect: 'readonly', watchPostEffect: 'readonly', watchSyncEffect: 'readonly', isShallow: 'readonly', effect: 'readonly', effectScope: 'readonly', getCurrentScope: 'readonly', onScopeDispose: 'readonly', defineComponent: 'readonly', defineAsyncComponent: 'readonly', resolveComponent: 'readonly', getCurrentInstance: 'readonly', h: 'readonly', inject: 'readonly', hasInjectionContext: 'readonly', nextTick: 'readonly', provide: 'readonly', defineModel: 'readonly', defineOptions: 'readonly', defineSlots: 'readonly', mergeModels: 'readonly', toValue: 'readonly', useModel: 'readonly', useAttrs: 'readonly', useCssModule: 'readonly', useCssVars: 'readonly', useSlots: 'readonly', useTransitionState: 'readonly', Component: 'readonly', ComponentPublicInstance: 'readonly', ComputedRef: 'readonly', ExtractPropTypes: 'readonly', ExtractPublicPropTypes: 'readonly', InjectionKey: 'readonly', PropType: 'readonly', Ref: 'readonly', MaybeRef: 'readonly', MaybeRefOrGetter: 'readonly', VNode: 'readonly', computedAsync: 'readonly', asyncComputed: 'readonly', computedEager: 'readonly', eagerComputed: 'readonly', computedInject: 'readonly', computedWithControl: 'readonly', controlledComputed: 'readonly', createEventHook: 'readonly', createGlobalState: 'readonly', createInjectionState: 'readonly', createReusableTemplate: 'readonly', createSharedComposable: 'readonly', createTemplatePromise: 'readonly', createUnrefFn: 'readonly', extendRef: 'readonly', injectLocal: 'readonly', isDefined: 'readonly', makeDestructurable: 'readonly', onClickOutside: 'readonly', onKeyStroke: 'readonly', onLongPress: 'readonly', onStartTyping: 'readonly', provideLocal: 'readonly', reactify: 'readonly', createReactiveFn: 'readonly', reactifyObject: 'readonly', reactiveComputed: 'readonly', reactiveOmit: 'readonly', reactivePick: 'readonly', refAutoReset: 'readonly', autoResetRef: 'readonly', refDebounced: 'readonly', debouncedRef: 'readonly', refDefault: 'readonly', refThrottled: 'readonly', throttledRef: 'readonly', refWithControl: 'readonly', controlledRef: 'readonly', syncRef: 'readonly', syncRefs: 'readonly', templateRef: 'readonly', toReactive: 'readonly', resolveRef: 'readonly', resolveUnref: 'readonly', tryOnBeforeMount: 'readonly', tryOnBeforeUnmount: 'readonly', tryOnMounted: 'readonly', tryOnScopeDispose: 'readonly', tryOnUnmounted: 'readonly', unrefElement: 'readonly', until: 'readonly', useActiveElement: 'readonly', useAnimate: 'readonly', useArrayDifference: 'readonly', useArrayEvery: 'readonly', useArrayFilter: 'readonly', useArrayFind: 'readonly', useArrayFindIndex: 'readonly', useArrayFindLast: 'readonly', useArrayIncludes: 'readonly', useArrayJoin: 'readonly', useArrayMap: 'readonly', useArrayReduce: 'readonly', useArraySome: 'readonly', useArrayUnique: 'readonly', useAsyncQueue: 'readonly', useAsyncState: 'readonly', useBase64: 'readonly', useBattery: 'readonly', useBluetooth: 'readonly', useBreakpoints: 'readonly', useBroadcastChannel: 'readonly', useBrowserLocation: 'readonly', useCached: 'readonly', useClipboard: 'readonly', useClipboardItems: 'readonly', useCloned: 'readonly', useConfirmDialog: 'readonly', useCounter: 'readonly', useCssVar: 'readonly', useCurrentElement: 'readonly', useCycleList: 'readonly', useDark: 'readonly', useDateFormat: 'readonly', useDebouncedRefHistory: 'readonly', useDebounceFn: 'readonly', useDeviceMotion: 'readonly', useDeviceOrientation: 'readonly', useDevicePixelRatio: 'readonly', useDevicesList: 'readonly', useDisplayMedia: 'readonly', useDocumentVisibility: 'readonly', useDraggable: 'readonly', useDropZone: 'readonly', useElementBounding: 'readonly', useElementByPoint: 'readonly', useElementHover: 'readonly', useElementSize: 'readonly', useElementVisibility: 'readonly', useEventBus: 'readonly', useEventListener: 'readonly', useEventSource: 'readonly', useEyeDropper: 'readonly', useFavicon: 'readonly', useFileDialog: 'readonly', useFileSystemAccess: 'readonly', useFocus: 'readonly', useFocusWithin: 'readonly', useFps: 'readonly', useFullscreen: 'readonly', useGamepad: 'readonly', useGeolocation: 'readonly', useIdle: 'readonly', useInfiniteScroll: 'readonly', useIntersectionObserver: 'readonly', useInterval: 'readonly', useIntervalFn: 'readonly', useKeyModifier: 'readonly', useLastChanged: 'readonly', useLocalStorage: 'readonly', useMagicKeys: 'readonly', useManualRefHistory: 'readonly', useMediaControls: 'readonly', useMediaQuery: 'readonly', useMemory: 'readonly', useMounted: 'readonly', useMouse: 'readonly', useMouseInElement: 'readonly', useMousePressed: 'readonly', useMutationObserver: 'readonly', useNavigatorLanguage: 'readonly', useNetwork: 'readonly', useObjectUrl: 'readonly', useOffsetPagination: 'readonly', useOnline: 'readonly', usePageLeave: 'readonly', useParallax: 'readonly', useParentElement: 'readonly', usePerformanceObserver: 'readonly', usePermission: 'readonly', usePointer: 'readonly', usePointerLock: 'readonly', usePointerSwipe: 'readonly', usePreferredColorScheme: 'readonly', usePreferredContrast: 'readonly', usePreferredDark: 'readonly', usePreferredLanguages: 'readonly', usePreferredReducedMotion: 'readonly', usePrevious: 'readonly', useRafFn: 'readonly', useRefHistory: 'readonly', useResizeObserver: 'readonly', useScreenOrientation: 'readonly', useScreenSafeArea: 'readonly', useScriptTag: 'readonly', useScroll: 'readonly', useScrollLock: 'readonly', useSessionStorage: 'readonly', useShare: 'readonly', useSorted: 'readonly', useSpeechRecognition: 'readonly', useSpeechSynthesis: 'readonly', useStepper: 'readonly', useStorageAsync: 'readonly', useStyleTag: 'readonly', useSupported: 'readonly', useSwipe: 'readonly', useTemplateRefsList: 'readonly', useTextareaAutosize: 'readonly', useTextDirection: 'readonly', useTextSelection: 'readonly', useThrottledRefHistory: 'readonly', useThrottleFn: 'readonly', useTimeAgo: 'readonly', useTimeout: 'readonly', useTimeoutFn: 'readonly', useTimeoutPoll: 'readonly', useTimestamp: 'readonly', useToggle: 'readonly', useTransition: 'readonly', useUrlSearchParams: 'readonly', useUserMedia: 'readonly', useVibrate: 'readonly', useVirtualList: 'readonly', useVModel: 'readonly', useVModels: 'readonly', useWakeLock: 'readonly', useWebNotification: 'readonly', useWebSocket: 'readonly', useWebWorker: 'readonly', useWebWorkerFn: 'readonly', useWindowFocus: 'readonly', useWindowScroll: 'readonly', useWindowSize: 'readonly', watchArray: 'readonly', watchAtMost: 'readonly', watchDebounced: 'readonly', debouncedWatch: 'readonly', watchDeep: 'readonly', watchIgnorable: 'readonly', ignorableWatch: 'readonly', watchImmediate: 'readonly', watchOnce: 'readonly', watchPausable: 'readonly', pausableWatch: 'readonly', watchThrottled: 'readonly', throttledWatch: 'readonly', watchTriggerable: 'readonly', watchWithFilter: 'readonly', whenever: 'readonly', injectHead: 'readonly', useHead: 'readonly', useSeoMeta: 'readonly', useHeadSafe: 'readonly', useServerHead: 'readonly', useServerSeoMeta: 'readonly', useServerHeadSafe: 'readonly', defaultScreenConfig: 'readonly', useAwesomeScreen: 'readonly', ScreenSize: 'readonly', useUserStore: 'readonly', useAuthStore: 'readonly', AuthUser: 'readonly', AuthState: 'readonly', useAdminSidebar: 'readonly', useAuthStorage: 'readonly', useAnalyticsPageEvent: 'readonly', useConsentScriptTrigger: 'readonly', useElementScriptTrigger: 'readonly', useScript: 'readonly', CloudflareWebAnalyticsOptions: 'readonly', useScriptCloudflareWebAnalytics: 'readonly', FathomAnalyticsOptions: 'readonly', useScriptFathomAnalytics: 'readonly', GoogleAnalyticsOptions: 'readonly', useScriptGoogleAnalytics: 'readonly', GoogleMapsOptions: 'readonly', useScriptGoogleMaps: 'readonly', useScriptGoogleTagManager: 'readonly', HotjarOptions: 'readonly', useScriptHotjar: 'readonly', IntercomOptions: 'readonly', useScriptIntercom: 'readonly', useScriptLemonSqueezy: 'readonly', MatomoAnalyticsOptions: 'readonly', useScriptMatomoAnalytics: 'readonly', MetaPixelOptions: 'readonly', useScriptMetaPixel: 'readonly', NpmOptions: 'readonly', useScriptNpm: 'readonly', PlausibleAnalyticsOptions: 'readonly', useScriptPlausibleAnalytics: 'readonly', SegmentOptions: 'readonly', useScriptSegment: 'readonly', StripeOptions: 'readonly', useScriptStripe: 'readonly', useScriptVimeoPlayer: 'readonly', XPixelOptions: 'readonly', useScriptXPixel: 'readonly', useScriptYouTubePlayer: 'readonly', useNonce: 'readonly', useImage: 'readonly', defineStore: 'readonly', acceptHMRUpdate: 'readonly', usePinia: 'readonly', storeToRefs: 'readonly', useColorMode: 'readonly', usePrimeVue: 'readonly', useStyle: 'readonly', useConfirm: 'readonly', useToast: 'readonly', useDialog: 'readonly', useI18n: 'readonly', useRouteBaseName: 'readonly', useLocalePath: 'readonly', useLocaleRoute: 'readonly', useSwitchLocalePath: 'readonly', useLocaleHead: 'readonly', useBrowserLocale: 'readonly', useCookieLocale: 'readonly', useSetI18nParams: 'readonly', defineI18nRoute: 'readonly', defineI18nLocale: 'readonly', defineI18nConfig: 'readonly', useCookieControl: 'readonly', useAdd: 'readonly', useAfter: 'readonly', useAry: 'readonly', useAssign: 'readonly', useAssignIn: 'readonly', useAssignInWith: 'readonly', useAssignWith: 'readonly', useAt: 'readonly', useAttempt: 'readonly', useBefore: 'readonly', useBind: 'readonly', useBindAll: 'readonly', useBindKey: 'readonly', useCamelCase: 'readonly', useCapitalize: 'readonly', useCastArray: 'readonly', useCeil: 'readonly', useChain: 'readonly', useChunk: 'readonly', useClamp: 'readonly', useClone: 'readonly', useCloneDeep: 'readonly', useCloneDeepWith: 'readonly', useCloneWith: 'readonly', useCompact: 'readonly', useConcat: 'readonly', useCond: 'readonly', useConforms: 'readonly', useConformsTo: 'readonly', useConstant: 'readonly', useCountBy: 'readonly', useCreate: 'readonly', useCurry: 'readonly', useCurryRight: 'readonly', useDebounce: 'readonly', useDeburr: 'readonly', useDefaultTo: 'readonly', useDefaults: 'readonly', useDefaultsDeep: 'readonly', useDefer: 'readonly', useDelay: 'readonly', useDifference: 'readonly', useDifferenceBy: 'readonly', useDifferenceWith: 'readonly', useDivide: 'readonly', useDrop: 'readonly', useDropRight: 'readonly', useDropRightWhile: 'readonly', useDropWhile: 'readonly', useEach: 'readonly', useEachRight: 'readonly', useEndsWith: 'readonly', useEntries: 'readonly', useEntriesIn: 'readonly', useEq: 'readonly', useEscape: 'readonly', useEscapeRegExp: 'readonly', useEvery: 'readonly', useExtend: 'readonly', useExtendWith: 'readonly', useFill: 'readonly', useFilter: 'readonly', useFind: 'readonly', useFindIndex: 'readonly', useFindKey: 'readonly', useFindLast: 'readonly', useFindLastIndex: 'readonly', useFindLastKey: 'readonly', useFirst: 'readonly', useFlatMap: 'readonly', useFlatMapDeep: 'readonly', useFlatMapDepth: 'readonly', useFlatten: 'readonly', useFlattenDeep: 'readonly', useFlattenDepth: 'readonly', useFlip: 'readonly', useFloor: 'readonly', useFlow: 'readonly', useFlowRight: 'readonly', useForEach: 'readonly', useForEachRight: 'readonly', useForIn: 'readonly', useForInRight: 'readonly', useForOwn: 'readonly', useForOwnRight: 'readonly', useFromPairs: 'readonly', useFunctions: 'readonly', useFunctionsIn: 'readonly', useGet: 'readonly', useGroupBy: 'readonly', useGt: 'readonly', useGte: 'readonly', useHas: 'readonly', useHasIn: 'readonly', useIdentity: 'readonly', useInRange: 'readonly', useIncludes: 'readonly', useIndexOf: 'readonly', useInitial: 'readonly', useIntersection: 'readonly', useIntersectionBy: 'readonly', useIntersectionWith: 'readonly', useInvert: 'readonly', useInvertBy: 'readonly', useInvoke: 'readonly', useInvokeMap: 'readonly', isArguments: 'readonly', isArray: 'readonly', isArrayBuffer: 'readonly', isArrayLike: 'readonly', isArrayLikeObject: 'readonly', isBoolean: 'readonly', isBuffer: 'readonly', isDate: 'readonly', isElement: 'readonly', isEmpty: 'readonly', isEqual: 'readonly', isEqualWith: 'readonly', isError: 'readonly', isFinite: 'readonly', isFunction: 'readonly', isInteger: 'readonly', isLength: 'readonly', isMap: 'readonly', isMatch: 'readonly', isMatchWith: 'readonly', isNaN: 'readonly', isNative: 'readonly', isNil: 'readonly', isNull: 'readonly', isNumber: 'readonly', isObject: 'readonly', isObjectLike: 'readonly', isPlainObject: 'readonly', isRegExp: 'readonly', isSafeInteger: 'readonly', isSet: 'readonly', isString: 'readonly', isSymbol: 'readonly', isTypedArray: 'readonly', isUndefined: 'readonly', isWeakMap: 'readonly', isWeakSet: 'readonly', useIteratee: 'readonly', useJoin: 'readonly', useKebabCase: 'readonly', useKeyBy: 'readonly', useKeys: 'readonly', useKeysIn: 'readonly', useLast: 'readonly', useLastIndexOf: 'readonly', useLowerCase: 'readonly', useLowerFirst: 'readonly', useLt: 'readonly', useLte: 'readonly', useMap: 'readonly', useMapKeys: 'readonly', useMapValues: 'readonly', useMatches: 'readonly', useMatchesProperty: 'readonly', useMax: 'readonly', useMaxBy: 'readonly', useMean: 'readonly', useMeanBy: 'readonly', useMemoize: 'readonly', useMerge: 'readonly', useMergeWith: 'readonly', useMethod: 'readonly', useMethodOf: 'readonly', useMin: 'readonly', useMinBy: 'readonly', useMixin: 'readonly', useMultiply: 'readonly', useNegate: 'readonly', useNoop: 'readonly', useNow: 'readonly', useNth: 'readonly', useNthArg: 'readonly', useOmit: 'readonly', useOmitBy: 'readonly', useOnce: 'readonly', useOrderBy: 'readonly', useOver: 'readonly', useOverArgs: 'readonly', useOverEvery: 'readonly', useOverSome: 'readonly', usePad: 'readonly', usePadEnd: 'readonly', usePadStart: 'readonly', useParseInt: 'readonly', usePartial: 'readonly', usePartialRight: 'readonly', usePartition: 'readonly', usePick: 'readonly', usePickBy: 'readonly', useProperty: 'readonly', usePropertyOf: 'readonly', usePull: 'readonly', usePullAll: 'readonly', usePullAllBy: 'readonly', usePullAllWith: 'readonly', usePullAt: 'readonly', useRandom: 'readonly', useRange: 'readonly', useRangeRight: 'readonly', useRearg: 'readonly', useReduce: 'readonly', useReduceRight: 'readonly', useReject: 'readonly', useRemove: 'readonly', useRepeat: 'readonly', useReplace: 'readonly', useRest: 'readonly', useResult: 'readonly', useReverse: 'readonly', useRound: 'readonly', useSample: 'readonly', useSampleSize: 'readonly', useSet: 'readonly', useSetWith: 'readonly', useShuffle: 'readonly', useSize: 'readonly', useSlice: 'readonly', useSnakeCase: 'readonly', useSome: 'readonly', useSortBy: 'readonly', useSortedIndex: 'readonly', useSortedIndexBy: 'readonly', useSortedIndexOf: 'readonly', useSortedLastIndex: 'readonly', useSortedLastIndexBy: 'readonly', useSortedLastIndexOf: 'readonly', useSortedUniq: 'readonly', useSortedUniqBy: 'readonly', useSplit: 'readonly', useSpread: 'readonly', useStartCase: 'readonly', useStartsWith: 'readonly', useStubArray: 'readonly', useStubFalse: 'readonly', useStubObject: 'readonly', useStubString: 'readonly', useStubTrue: 'readonly', useSubtract: 'readonly', useSum: 'readonly', useSumBy: 'readonly', useTail: 'readonly', useTake: 'readonly', useTakeRight: 'readonly', useTakeRightWhile: 'readonly', useTakeWhile: 'readonly', useTap: 'readonly', useTemplate: 'readonly', useThrottle: 'readonly', useTimes: 'readonly', useToArray: 'readonly', useToFinite: 'readonly', useToInteger: 'readonly', useToLength: 'readonly', useToLower: 'readonly', useToNumber: 'readonly', useToPairs: 'readonly', useToPairsIn: 'readonly', useToPath: 'readonly', useToPlainObject: 'readonly', useToSafeInteger: 'readonly', useToString: 'readonly', useToUpper: 'readonly', useTransform: 'readonly', useTrim: 'readonly', useTrimEnd: 'readonly', useTrimStart: 'readonly', useTruncate: 'readonly', useUnary: 'readonly', useUnescape: 'readonly', useUnion: 'readonly', useUnionBy: 'readonly', useUnionWith: 'readonly', useUniq: 'readonly', useUniqBy: 'readonly', useUniqWith: 'readonly', useUniqueId: 'readonly', useUnset: 'readonly', useUnzip: 'readonly', useUnzipWith: 'readonly', useUpdate: 'readonly', useUpdateWith: 'readonly', useUpperCase: 'readonly', useUpperFirst: 'readonly', useValues: 'readonly', useValuesIn: 'readonly', useWithout: 'readonly', useWords: 'readonly', useWrap: 'readonly', useXor: 'readonly', useXorBy: 'readonly', useXorWith: 'readonly', useZip: 'readonly', useZipObject: 'readonly', useZipObjectDeep: 'readonly', useZipWith: 'readonly', useViewport: 'readonly', definePageMeta: 'readonly', useLink: 'readonly' } } },
);

export function withNuxt(...customs) {
  return configs
    .clone()
    .append(...customs)
    .onResolved(configs => typegen(configs, { dtsPath: new URL('./eslint-typegen.d.ts', import.meta.url), augmentFlatConfigUtils: true }));
}

export default withNuxt;
